#!/bin/bash

. ./shared-functions

require_root_user

if [[ -z "$1" ]]; then
	echo "*** Please specify the target user for powerline shell"
	exit 1
fi

mkdir -p /usr/local/src/

gitclonepull https://github.com/milkbikis/powerline-shell /usr/local/src/powerline-shell
cd /usr/local/src/powerline-shell

cat > /usr/local/src/powerline-shell/config.py << END_CONFIG_PY 
SEGMENTS = [
    'set_term_title',
    'username',
    'hostname',
    'ssh',
    'cwd',
    'read_only',
    'git',
    'svn',
    'jobs',
    'root',
]
THEME = 'default'
END_CONFIG_PY

./install.py

mkdir -p /usr/local/bin
install --mode 0755 ./powerline-shell.py /usr/local/bin/ 

gitclonepull https://github.com/powerline/fonts.git /usr/local/src/powerline-fonts
cd /usr/local/src/powerline-fonts

su -c "./install.sh" $1

TARGETHOME=$(eval echo "~$1")
touch $TARGETHOME/.bashrc
if [[ -z "$(grep powerline-shell.py $TARGETHOME/.bashrc)" ]]; then
	cat >> $TARGETHOME/.bashrc << END_BASHRC

### powerline-shell prompt

function _update_ps1() {
    PS1="\$(/usr/local/bin/powerline-shell.py \$? 2> /dev/null)"
}

if [ "\$TERM" != "linux" ]; then
    PROMPT_COMMAND="_update_ps1; \$PROMPT_COMMAND"
fi

### end powerline-shell prompt

END_BASHRC
	echo "--- $TARGETHOME/.bashrc updated"
else
	echo "--- $TARGETHOME/.bashrc already updated"
fi

echo "--- Done!"

