#!/bin/bash

. ./shared-functions

echo "--- Installing vim full and curl"
if [[ $EUID -ne 0 ]]; then
	sudo apt-get -qy install vim curl
else
	apt-get -qy install vim curl
fi

if [[ ! -f ~/.vimrc ]]; then
	cat > ~/.vimrc << END_VIMRC
syntax on
filetype plugin indent on
set number
set tabstop=4 softtabstop=0 noexpandtab shiftwidth=4
END_VIMRC
	echo "--- Installed new .vimrc file"
fi

echo "--- Installing pathogen package manager"
mkdir -p ~/.vim/autoload ~/.vim/bundle
curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim

if [[ -z "$(grep pathogen.infect ~/.vimrc)" ]]; then
	cat >> ~/.vimrc << END_VIMRC
execute pathogen#infect()
execute pathogen#helptags()
END_VIMRC
	echo "--- Adding pathogen to existing .vimrc file"
fi 

echo "--- Installing vim packages"
gitclonepull git://github.com/tpope/vim-sensible.git ~/.vim/bundle/vim-sensible
gitclonepull https://github.com/kien/ctrlp.vim.git ~/.vim/bundle/ctrlp.vim
gitclonepull https://github.com/scrooloose/syntastic.git ~/.vim/bundle/syntastic
gitclonepull git://github.com/airblade/vim-gitgutter.git ~/.vim/bundle/vim-gitgutter
gitclonepull https://github.com/Raimondi/delimitMate.git ~/.vim/bundle/delimitMate

echo "--- Configuring syntastic"
if [[ -z "$(grep syntastic ~/.vimrc)" ]]; then
	cat >> ~/.vimrc << END_VIMRC
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
END_VIMRC
	echo "--- Adding syntastic config to existing .vimrc file"
fi 
if [[ -z "$(grep eslint ~/.vimrc)" && -x /usr/bin/eslint ]]; then
	cat >> ~/.vimrc << END_VIMRC
let g:syntastic_javascript_checkers = ['eslint']
END_VIMRC
	echo "--- Enabling eslint for syntastic using existing .vimrc file"
fi 

echo "--- Configuring ctrlp"
if [[ -z "$(grep ctrlp ~/.vimrc)" ]]; then
	cat >> ~/.vimrc << END_VIMRC
let g:ctrlp_custom_ignore = 'node_modules\|DS_Store\|git'
END_VIMRC

echo "--- Done!"
